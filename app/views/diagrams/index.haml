-# coding: utf-8

- if @diagrams.blank?
  %h4 You have no problems.  Let's create some!
  = link_to 'New problem', new_diagram_path, class: [:button, 'float-left']
- else
  = link_to 'New problem', new_diagram_path, class: [:button, 'float-left']

  = form_tag diagrams_path, method: :get do
    /%h3.clearboth Listing problems
    %p.clear
      Filter search by author:
      = text_field_tag 'search[authors_name_like]', '', size: 10
      stipulation:
      = text_field_tag 'search[stipulation_equals]', '', size: 5
      = submit_tag 'Apply filter', class: 'no-margin'
    %div(style = 'padding: 3px; background-color: #eee;' class = "clearfix")
      = will_paginate @diagrams
      .pagestat= page_entries_info @diagrams
    /
      collection:
      = collection_select :search, :collections, @collection_source, |
        :id, :name, {:include_blank => true, :selected => @scoll} |
  - if current_user
    -# %p.fine Other people's “Public” collections will not be shown, only those created by you.
  - else
    %p.fine Only “public” collections will be shown, as you are not logged in.
  /= paginate @diagrams
  /.pagestat= page_entries_info @diagrams
  %br.clearboth
  %table.diagrams.clear
    - @diagrams.each do |diagram|
      %tr.clickable{:onclick => "window.location.href = '#{url_for diagram}'"}
        %td{:style => "vertical-align:top;color:#46D"}= h diagram.id
        %td
          %h3= diagram.authors.collect(&:name).commatize
          .p= [ diagram.source, diagram.issue, diagram.label ].commatize
          .p= diagram.award
          .em1
          %div= diagram.stipulation
          %div= diagram.twin
          -#%div= diagram.tested ? 'C+' : ''
        %td.board
          %div{:style => "padding:0; position:relative"}
            = image_tag '/fen/' + diagram.position, class: :noBorder if diagram.position
        %td{:style => "vertical-align:top"}
          %pre.solution= h diagram.solution
        /%td{:style => "color:#281"}
        /  = h diagram.collections.collect(&:name).join(', ')
        %td{:style => "color:#281"}
          = h diagram.sections.collect(&:name).commatize
  %br
  = will_paginate @diagrams
  .pagestat= page_entries_info @diagrams
  = link_to 'New problem', new_diagram_path, class: [:button, 'float-left']
  
