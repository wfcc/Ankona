- content_for :scripts do
  = javascript_include_tag :sections_judge
  
- i_am_director  = @section.user == current_user
- i_am_judge     = @section.users.index current_user

.bluey
  %h2= @section.competition.name
  %h3= @section.name

  %p
    Section director:
    %b= @section.user.et.nick
    - if i_am_director
      = link_to ' Section report ', section_path(@section), class: :button
    %br
    Section judges:
    %b= @section.users.map(&:nick).commatize

    %p
      Competition status is:
      != Status.where(table: 'competitions', value: (@section.competition.status or 0)).first.name.bold

.section{'data-sid' => @section.id}
  - @section.diagrams.each do |diagram|
    - marks = @marks & diagram.marks
    - mark = marks.present? ? marks[0] : Mark.new(diagram_id: diagram.id, section_id: @section.id)
    
    - value = mark.nummark
    - mid = mark.id

    - i_am_author       = diagram.authors.index current_user.author
    - judge_author      = (diagram.authors & @section.users.map(&:author)).present?

    = form_for mark, remote: true, url: mark_section_path(@section), html: {method: :post} do |f|
      %table.judging
        %tr
          %td.first
            %div
              .id= diagram.id
              %h4= diagram.authors.collect(&:name).commatize
              %p= [ diagram.source, diagram.label ].join(' / ')
              .em1= diagram.stipulation
              %p= diagram.twin
          %td
            %div(style = "padding:0 0 20px 0; position:relative")
              = image_tag '/fen/' + diagram.position, class: :noBorder if diagram.position
          %td
            %pre.solution= diagram.solution
        - case
        - when @section.competition.status != 2
          %tr
            %td
        - when i_am_author
          %tr
            %td.hilite.clearboth
              This problem will be judged by your colleagues.
        - when i_am_judge || (i_am_director and judge_author)
          %tr
            %td
              .mark(data-did = "#{diagram.id}" style="height: 1ex")= value
            %td
              .slider{'data-did' => diagram.id, 'data-value' => value, 'data-mid' => mid}
              %table.slider
                %tr
                  - (0..4).step(0.5).each do |x|
                    %td
                      = x
          %tr
            %td
              = f.submit ' Update comment ', disable_with: ' Updating... '
              = f.hidden_field :diagram_id
              = f.hidden_field :section_id
              = f.hidden_field :id
              %p.updating
            %td
              = f.text_area :comment, cols: 80, rows: 5
        - when i_am_director
          %tr
            %td.fine director's view
      %hr

